{
  "database": "neuralperk",
  "collections": [
    {
      "name": "customers",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "title": "customers",
          "required": ["customerId", "email", "password"],
          "properties": {
            "customerId": {
              "bsonType": "string",
              "description": "unique customer identifier, must be a string and is required"
            },
            "email": {
              "bsonType": "string",
              "description": "must be a string and is required"
            },
            "password": {
              "bsonType": "string",
              "description": "must be a string and is required"
            }
          }
        }
      },
      "validationLevel": "strict",
      "validationAction": "error"
    },
    {
      "name": "blenderObjects",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "title": "blenderObjects",
          "required": ["objectId", "customerId"],
          "properties": {
            "objectId": {
              "bsonType": "string",
              "description": "unique object identifier, must be a string and is required"
            },
            "blendFileName": {
              "bsonType": ["string", "null"],
              "description": "name of the blend file (e.g., 'chair_model.blend'), must be a string if present, or null if not available"
            },
            "blendFilePath": {
              "bsonType": ["string", "null"],
              "description": "must be a string if present, or null if not available"
            },
            "blendFileHash": {
              "bsonType": ["string", "null"],
              "description": "SHA-256 hash of the blend file content, must be a string if present, or null if not available"
            },
            "renderedVideoPath": {
              "bsonType": ["string", "null"],
              "description": "must be a string if present, or null if not available"
            },
            "renderedImages": {
              "bsonType": "array",
              "description": "array of rendered image objects with frame number and file path",
              "items": {
                "bsonType": "object",
                "required": ["frameNumber", "imageFilePath"],
                "properties": {
                  "frameNumber": {
                    "bsonType": "int",
                    "description": "frame number of the rendered image, must be an integer and is required"
                  },
                  "imageFilePath": {
                    "bsonType": "string",
                    "description": "file path to the rendered image, must be a string and is required"
                  }
                }
              }
            },
            "customerId": {
              "bsonType": "string",
              "description": "reference to customerId in customers collection, must be a string and is required"
            }
          }
        }
      },
      "validationLevel": "strict",
      "validationAction": "error"
    },
    {
      "name": "sessions",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "title": "sessions",
          "required": ["sessionId", "customerId", "blenderObjectId", "status"],
          "properties": {
            "sessionId": {
              "bsonType": "string",
              "description": "unique session identifier, must be a string and is required"
            },
            "customerId": {
              "bsonType": "string",
              "description": "reference to customerId in customers collection, must be a string and is required"
            },
            "blenderObjectId": {
              "bsonType": "string",
              "description": "reference to objectId in blenderObjects collection, must be a string and is required"
            },
            "status": {
              "bsonType": "string",
              "description": "status of the session (e.g., queued, rendering, completed, failed), must be a string and is required"
            }
          }
        }
      },
      "validationLevel": "strict",
      "validationAction": "error"
    }
  ]
}
