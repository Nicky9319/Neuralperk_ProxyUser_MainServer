{
	"info": {
		"_postman_id": "mongodb-service-unit-tests",
		"name": "MongoDB Service Unit Tests",
		"description": "Comprehensive unit test collection for MongoDB Service APIs including customer management, blender objects, and sessions. IDs are now auto-generated by the service.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Root Endpoint",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", ""]
						},
						"description": "Test if MongoDB Service is active and responding"
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer Management",
			"item": [
				{
					"name": "Add Customer - Success",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securePassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/customers/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "customers", "add"]
						},
						"description": "Add a new customer with valid data. customerId will be auto-generated."
					},
					"response": []
				},
				{
					"name": "Add Customer - Missing Fields",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"jane.smith@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/customers/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "customers", "add"]
						},
						"description": "Test validation - missing password field"
					},
					"response": []
				},
				{
					"name": "Add Customer - Duplicate Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/customers/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "customers", "add"]
						},
						"description": "Test duplicate email handling (should fail)"
					},
					"response": []
				},
				{
					"name": "Check Customer Exists - Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/customers/check/cust_001",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "customers", "check", "cust_001"]
						},
						"description": "Check if customer exists using hardcoded customerId"
					},
					"response": []
				},
				{
					"name": "Check Customer Exists - Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/customers/check/nonexistent_customer",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "customers", "check", "nonexistent_customer"]
						},
						"description": "Check if customer exists (should return not found)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Blender Object Management",
			"item": [
				{
					"name": "Add Blender Object - Success",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"cust_001\",\n  \"blendFileName\": \"chair_model.blend\",\n  \"blendFilePath\": \"/path/to/model.blend\",\n  \"renderedVideoPath\": \"/path/to/video.mp4\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add"]
						},
						"description": "Add a new blender object with all fields. objectId will be auto-generated."
					},
					"response": []
				},
				{
					"name": "Add Blender Object - Minimal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"cust_001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add"]
						},
						"description": "Add a blender object with only required fields. objectId will be auto-generated."
					},
					"response": []
				},
				{
					"name": "Add Blender Object - Invalid Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"invalid_customer\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add"]
						},
						"description": "Test adding object with non-existent customer"
					},
					"response": []
				},
				{
					"name": "Add Blender Object - With Blend File Name Only",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"cust_001\",\n  \"blendFileName\": \"table_model.blend\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add"]
						},
						"description": "Add a blender object with only blendFileName (no file paths). objectId will be auto-generated."
					},
					"response": []
				},
				{
					"name": "Update Blend File Path - Success",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\",\n  \"blendFilePath\": \"/new/path/to/updated_model.blend\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/update-blend-file",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "update-blend-file"]
						},
						"description": "Update blend file path for existing object using hardcoded IDs"
					},
					"response": []
				},
				{
					"name": "Update Blend File Path - Object Not Found",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"nonexistent_obj\",\n  \"customerId\": \"cust_001\",\n  \"blendFilePath\": \"/path/to/file.blend\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/update-blend-file",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "update-blend-file"]
						},
						"description": "Test updating non-existent object"
					},
					"response": []
				},
				{
					"name": "Update Video File Path - Success",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\",\n  \"renderedVideoPath\": \"/new/path/to/rendered_video.mp4\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/update-video-file",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "update-video-file"]
						},
						"description": "Update rendered video path for existing object using hardcoded IDs"
					},
					"response": []
				},
				{
					"name": "Update Video File Path - Missing Fields",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/update-video-file",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "update-video-file"]
						},
						"description": "Test validation - missing renderedVideoPath field"
					},
					"response": []
				}
			]
		},
		{
			"name": "Blend File Name Management",
			"item": [
				{
					"name": "Update Blend File Name - Success",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\",\n  \"blendFileName\": \"updated_chair_model.blend\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/update-blend-file-name",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "update-blend-file-name"]
						},
						"description": "Update blend file name for existing object using hardcoded IDs"
					},
					"response": []
				},
				{
					"name": "Update Blend File Name - Missing Fields",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/update-blend-file-name",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "update-blend-file-name"]
						},
						"description": "Test validation - missing blendFileName field"
					},
					"response": []
				},
				{
					"name": "Update Blend File Name - Invalid Customer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"invalid_customer\",\n  \"blendFileName\": \"test.blend\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/update-blend-file-name",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "update-blend-file-name"]
						},
						"description": "Test updating with non-existent customer"
					},
					"response": []
				},
				{
					"name": "Update Blend File Name - Invalid Object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"invalid_object\",\n  \"customerId\": \"cust_001\",\n  \"blendFileName\": \"test.blend\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/update-blend-file-name",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "update-blend-file-name"]
						},
						"description": "Test updating non-existent object"
					},
					"response": []
				},
				{
					"name": "Get Blend File Name - Success",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/get-blend-file-name/obj_001?customer_id=cust_001",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "get-blend-file-name", "obj_001"],
							"query": [
								{
									"key": "customer_id",
									"value": "cust_001"
								}
							]
						},
						"description": "Get blend file name for existing object using hardcoded IDs"
					},
					"response": []
				},
				{
					"name": "Get Blend File Name - Object Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/get-blend-file-name/invalid_object?customer_id=cust_001",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "get-blend-file-name", "invalid_object"],
							"query": [
								{
									"key": "customer_id",
									"value": "cust_001"
								}
							]
						},
						"description": "Test getting blend file name for non-existent object"
					},
					"response": []
				},
				{
					"name": "Get Blend File Name - Customer Mismatch",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/get-blend-file-name/obj_001?customer_id=cust_002",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "get-blend-file-name", "obj_001"],
							"query": [
								{
									"key": "customer_id",
									"value": "cust_002"
								}
							]
						},
						"description": "Test getting blend file name with wrong customer ID"
					},
					"response": []
				},
				{
					"name": "Find Blend File By Hash - Success",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/find-by-hash/1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "find-by-hash", "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"]
						},
						"description": "Find blend file by SHA-256 hash (success case)"
					},
					"response": []
				},
				{
					"name": "Find Blend File By Hash - Invalid Hash Format",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/find-by-hash/invalid_hash",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "find-by-hash", "invalid_hash"]
						},
						"description": "Test with invalid SHA-256 hash format (should fail)"
					},
					"response": []
				},
				{
					"name": "Find Blend File By Hash - Hash Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/find-by-hash/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "find-by-hash", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"]
						},
						"description": "Test with valid hash format but hash not found in database"
					},
					"response": []
				},
				{
					"name": "Find Blend File By Hash - Hash Too Short",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/find-by-hash/1234567890abcdef",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "find-by-hash", "1234567890abcdef"]
						},
						"description": "Test with hash that is too short (less than 64 characters)"
					},
					"response": []
				},
				{
					"name": "Get Blend File From Path - Success",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/get-blend-file-from-path?file_path=path%2Fto%2Fsample.blend",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "get-blend-file-from-path"],
							"query": [
								{
									"key": "file_path",
									"value": "path/to/sample.blend"
								}
							]
						},
						"description": "Find blend file in database by calculating hash of input path (success case)"
					},
					"response": []
				},
				{
					"name": "Get Blend File From Path - Empty Path",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/get-blend-file-from-path?file_path=",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "get-blend-file-from-path"],
							"query": [
								{
									"key": "file_path",
									"value": ""
								}
							]
						},
						"description": "Test with empty file path (should fail)"
					},
					"response": []
				},
				{
					"name": "Get Blend File From Path - Path Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/get-blend-file-from-path?file_path=nonexistent%2Fpath%2Ffile.blend",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "get-blend-file-from-path"],
							"query": [
								{
									"key": "file_path",
									"value": "nonexistent/path/file.blend"
								}
							]
						},
						"description": "Test with file path that doesn't exist in database (should return 404)"
					},
					"response": []
				},
				{
					"name": "Get Blend File From Path - Special Characters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/get-blend-file-from-path?file_path=path%2Fwith%20spaces%20and%20special%20chars%21%40%23.blend",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "get-blend-file-from-path"],
							"query": [
								{
									"key": "file_path",
									"value": "path/with spaces and special chars!@#.blend"
								}
							]
						},
						"description": "Test with file path containing spaces and special characters"
					},
					"response": []
				},
				{
					"name": "Get Blend File From Path - Missing Parameter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/get-blend-file-from-path",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "get-blend-file-from-path"]
						},
						"description": "Test without file_path query parameter (should fail)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Session Management",
			"item": [
				{
					"name": "Add Session - Success",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"cust_001\",\n  \"blenderObjectId\": \"obj_001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/sessions/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "sessions", "add"]
						},
						"description": "Add a new session with default 'queued' status. sessionId will be auto-generated."
					},
					"response": []
				},
				{
					"name": "Add Session - Custom Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"cust_001\",\n  \"blenderObjectId\": \"obj_001\",\n  \"status\": \"rendering\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/sessions/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "sessions", "add"]
						},
						"description": "Add a session with custom status. sessionId will be auto-generated."
					},
					"response": []
				},
				{
					"name": "Add Session - Invalid Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"invalid_customer\",\n  \"blenderObjectId\": \"obj_001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/sessions/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "sessions", "add"]
						},
						"description": "Test adding session with non-existent customer"
					},
					"response": []
				},
				{
					"name": "Add Session - Invalid Blender Object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"cust_001\",\n  \"blenderObjectId\": \"invalid_object\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/sessions/add",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "sessions", "add"]
						},
						"description": "Test adding session with non-existent blender object"
					},
					"response": []
				},
				{
					"name": "Update Session Status - Success",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sessionId\": \"sess_001\",\n  \"status\": \"completed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/sessions/update-status",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "sessions", "update-status"]
						},
						"description": "Update session status to completed using hardcoded sessionId"
					},
					"response": []
				},
				{
					"name": "Update Session Status - Not Found",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sessionId\": \"nonexistent_session\",\n  \"status\": \"failed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/sessions/update-status",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "sessions", "update-status"]
						},
						"description": "Test updating non-existent session"
					},
					"response": []
				},
				{
					"name": "Update Session Status - Missing Fields",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sessionId\": \"sess_001\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/sessions/update-status",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "sessions", "update-status"]
						},
						"description": "Test validation - missing status field"
					},
					"response": []
				}
			]
		},
		{
			"name": "Rendered Images Management",
			"item": [
				{
					"name": "Add Single Rendered Image - Success",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\",\n  \"frameNumber\": 5,\n  \"imageFilePath\": \"/renders/cust_001/chair/frame_005.png\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-image",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-image"]
						},
						"description": "Add a new rendered image for a specific frame using hardcoded IDs"
					},
					"response": []
				},
				{
					"name": "Add Single Rendered Image - Update Existing Frame",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\",\n  \"frameNumber\": 1,\n  \"imageFilePath\": \"/renders/cust_001/chair/frame_001_updated.png\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-image",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-image"]
						},
						"description": "Update an existing frame with new image file path using hardcoded IDs"
					},
					"response": []
				},
				{
					"name": "Add Single Rendered Image - Missing Fields",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\",\n  \"frameNumber\": 6\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-image",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-image"]
						},
						"description": "Test validation - missing imageFilePath field"
					},
					"response": []
				},
				{
					"name": "Add Single Rendered Image - Invalid Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"invalid_customer\",\n  \"frameNumber\": 7,\n  \"imageFilePath\": \"/renders/invalid/frame_007.png\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-image",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-image"]
						},
						"description": "Test adding image with non-existent customer"
					},
					"response": []
				},
				{
					"name": "Add Single Rendered Image - Invalid Object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"invalid_object\",\n  \"customerId\": \"cust_001\",\n  \"frameNumber\": 8,\n  \"imageFilePath\": \"/renders/cust_001/invalid/frame_008.png\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-image",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-image"]
						},
						"description": "Test adding image with non-existent blender object"
					},
					"response": []
				},
				{
					"name": "Add Batch Rendered Images - Success",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"images\": [\n    {\n      \"objectId\": \"obj_001\",\n      \"customerId\": \"cust_001\",\n      \"frameNumber\": 10,\n      \"imageFilePath\": \"/renders/cust_001/chair/frame_010.png\"\n    },\n    {\n      \"objectId\": \"obj_001\",\n      \"customerId\": \"cust_001\",\n      \"frameNumber\": 11,\n      \"imageFilePath\": \"/renders/cust_001/chair/frame_011.png\"\n    },\n    {\n      \"objectId\": \"obj_002\",\n      \"customerId\": \"cust_002\",\n      \"frameNumber\": 3,\n      \"imageFilePath\": \"/renders/cust_002/table/frame_003.png\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-images-batch",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-images-batch"]
						},
						"description": "Add multiple rendered images in batch for different objects using hardcoded IDs"
					},
					"response": []
				},
				{
					"name": "Add Batch Rendered Images - Mixed Success/Failure",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"images\": [\n    {\n      \"objectId\": \"obj_001\",\n      \"customerId\": \"cust_001\",\n      \"frameNumber\": 12,\n      \"imageFilePath\": \"/renders/cust_001/chair/frame_012.png\"\n    },\n    {\n      \"objectId\": \"invalid_object\",\n      \"customerId\": \"cust_001\",\n      \"frameNumber\": 13,\n      \"imageFilePath\": \"/renders/cust_001/invalid/frame_013.png\"\n    },\n    {\n      \"objectId\": \"obj_002\",\n      \"customerId\": \"cust_002\",\n      \"frameNumber\": 4,\n      \"imageFilePath\": \"/renders/invalid/table/frame_004.png\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-images-batch",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-images-batch"]
						},
						"description": "Test batch operation with mix of valid and invalid data using hardcoded IDs"
					},
					"response": []
				},
				{
					"name": "Add Batch Rendered Images - Empty Array",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"images\": []\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-images-batch",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-images-batch"]
						},
						"description": "Test validation - empty images array"
					},
					"response": []
				},
				{
					"name": "Add Batch Rendered Images - Missing Images Field",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"objectId\": \"obj_001\",\n  \"customerId\": \"cust_001\",\n  \"frameNumber\": 14,\n  \"imageFilePath\": \"/renders/cust_001/chair/frame_014.png\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-images-batch",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-images-batch"]
						},
						"description": "Test validation - missing images array field"
					},
					"response": []
				},
				{
					"name": "Add Batch Rendered Images - Invalid Image Object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"images\": [\n    {\n      \"objectId\": \"obj_001\",\n      \"customerId\": \"cust_001\",\n      \"frameNumber\": 14,\n      \"imageFilePath\": \"/renders/cust_001/chair/frame_015.png\"\n    },\n    {\n      \"objectId\": \"obj_001\",\n      \"customerId\": \"cust_001\",\n      \"frameNumber\": 16\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/mongodb-service/blender-objects/add-rendered-images-batch",
							"host": ["{{base_url}}"],
							"path": ["api", "mongodb-service", "blender-objects", "add-rendered-images-batch"]
						},
						"description": "Test validation - missing required fields in image object"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pre-request script for MongoDB Service Unit Tests",
					"console.log('Testing endpoint: ' + pm.request.url);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Test script for MongoDB Service Unit Tests",
					"pm.test('Status code is valid', function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 400, 404, 409, 500]);",
					"});",
					"",
					"pm.test('Response has required structure', function () {",
					"    const response = pm.response.json();",
					"    pm.expect(response).to.have.property('message');",
					"});",
					"",
					"pm.test('Response time is acceptable', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(1000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:12000",
			"type": "string",
			"description": "Base URL for MongoDB Service (localhost:12000)"
		}
	]
}
