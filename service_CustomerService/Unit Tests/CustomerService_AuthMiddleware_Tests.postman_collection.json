{
	"info": {
		"_postman_id": "customer-service-auth-tests-simple",
		"name": "Customer Service - Simple Auth Middleware Tests",
		"description": "Simple collection to test the authentication middleware functionality in Customer Service. Contains 2 test cases: valid access token and invalid access token.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Test with Valid Access Token",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer cust_001"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"test\": \"Testing authentication with valid access token in header only\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/customer-service/test-auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"customer-service",
						"test-auth"
					]
				},
				"description": "Tests the new test-auth endpoint with a valid Bearer token in header only. This should return 200 OK with authentication details."
			},
			"response": []
		},
		{
			"name": "2. Test with Invalid Access Token",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer invalid_customer_999"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"test\": \"Testing authentication with invalid access token in header only\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/customer-service/test-auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"customer-service",
						"test-auth"
					]
				},
				"description": "Tests the new test-auth endpoint with an invalid Bearer token in header only. This should return 401 Unauthorized."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pre-request script to set up test data",
					"console.log('Testing Customer Service Authentication Middleware');",
					"console.log('Base URL:', pm.environment.get('base_url'));",
					"console.log('Current timestamp:', new Date().toISOString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Test script to validate responses",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has valid JSON', function () {",
					"    pm.response.to.have.jsonBody();",
					"});",
					"",
					"// Test specific to authentication scenarios",
					"if (pm.request.headers.has('Authorization')) {",
					"    pm.test('Authorization header is present', function () {",
					"        pm.expect(pm.request.headers.get('Authorization')).to.not.be.undefined;",
					"    });",
					"}",
					"",
					"// Log response for debugging",
					"console.log('Response Status:', pm.response.status);",
					"console.log('Response Body:', pm.response.text());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:11000",
			"type": "string",
			"description": "Base URL for the Customer Service. Update this if your service runs on a different port or host."
		}
	]
}
